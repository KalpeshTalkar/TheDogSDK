# This is a basic workflow to help you get started with Actions

name: UI Tests on Firebase Test Lab

# Controls when the workflow will run
on:
#   push:
#     branches: [ main ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  firebase:
    name: Run UI tests with Firebase Test Lab
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
#           BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
#          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      
#       - name: Bundle install
#         run: bundle install
      
#       - name: Install pods
#         run: pod install
        
      - name: Build project for test
        run: |
          xcodebuild -project TheDogSDK.xcodeproj \
          -scheme DemoAppUITests \
          -derivedDataPath Test\ Output \
          -sdk iphoneos build-for-testing
          -allowProvisioningUpdates \
          CODE_SIGN_STYLE="Automatic"
#          -sdk iphonesimulator build-for-testing
          
      - name: Contents
        run: |
          cd Test\ Output/Build/Products && ls -l
          
      - name: PWD
        run: pwd
          
      - name: Zip
        run: |
          cd Test\ Output/Build/Products && zip -r TelnyxVideoUITests.zip *
#          cd Test\ Output/Build/Products && zip -r DemoUITests.zip Debug-iphonesimulator DemoAppUITests_iphonesimulator14.4-arm64-x86_64.xctestrun

      - name: GCloud Auth
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

#       - name: Current project
#         run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Run UI tests in Firebase Test Lab
        run: |
          gcloud firebase test ios run --test Test\ Output/Build/Products/TelnyxVideoUITests.zip \
          --xcode-version=12.5
          --device model=iphonexr,version=13.2,orientation=portrait \
          --device model=iphonexsmax,version=12.1,orientation=portrait \
          --device model=iphone7plus,version=14.1,orientation=portrait \
          
